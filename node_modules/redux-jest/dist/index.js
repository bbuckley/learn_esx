'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-undef */
var deepFreeze = require('deep-freeze');

var actionTest = function actionTest(description, actionCreator, data, type) {
  it(description, function () {
    expect(actionCreator(data)).toEqual(type);
  });
};

var reducerTest = function reducerTest(description, reducer, stateBefore, action, stateAfter) {
  it(description, function () {
    deepFreeze(action);
    deepFreeze(stateBefore);

    expect(reducer(stateBefore, action)).toEqual(stateAfter);
  });
};

var asyncReducerTest = function asyncReducerTest(description, reducer, stateBefore, asyncAction, stateAfter) {
  it(description, (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
    var action;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return asyncAction;

          case 2:
            action = _context.sent;


            deepFreeze(action);
            deepFreeze(stateBefore);

            expect(reducer(stateBefore, action)).toEqual(stateAfter);

          case 6:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined);
  })));
};

module.exports = {
  actionTest: actionTest,
  reducerTest: reducerTest,
  asyncReducerTest: asyncReducerTest
};